name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  REGISTRY: docker.io
  IMAGE_NAME_CLIENT: ${{ github.repository }}-client
  IMAGE_NAME_SERVER: ${{ github.repository }}-server

jobs:
  test-client:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install client dependencies
      run: npm ci
      
    - name: Run client linting
      run: npm run lint
      
    - name: Run client tests
      run: npm run test
      env:
        CI: true
      
    - name: Build client
      run: npm run build 

  test-server:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'maven'
        cache-dependency-path: server/pom.xml
        
    - name: Generate Maven wrapper
      working-directory: ./server
      run: mvn -N io.takari:maven:wrapper
      
    - name: Run server tests with test profile
      working-directory: ./server
      run: ./mvnw test -Pcoverage
      env:
        SPRING_PROFILES_ACTIVE: test
      
    - name: Build server
      working-directory: ./server
      run: ./mvnw clean package -DskipTests

  build-and-push:
    needs: [test-client, test-server]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata for client
      id: meta-client
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_CLIENT }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          
    - name: Extract metadata for server
      id: meta-server
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_SERVER }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          
    # Budowanie obrazu clienta
    - name: Build and push client image
      uses: docker/build-push-action@v5
      with:
        context: ./client
        file: ./client/Dockerfile
        push: true
        tags: ${{ steps.meta-client.outputs.tags }}
        labels: ${{ steps.meta-client.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    # Budowanie obrazu servera
    - name: Build and push server image
      uses: docker/build-push-action@v5
      with:
        context: ./server
        file: ./server/Dockerfile
        push: true
        tags: ${{ steps.meta-server.outputs.tags }}
        labels: ${{ steps.meta-server.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
